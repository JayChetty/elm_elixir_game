var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Change':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentPlayerName: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Move':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{position: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				var newPlayer = {name: model.currentPlayerName};
				var newPlayers = {ctor: '::', _0: newPlayer, _1: model.players};
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{players: newPlayers, inGame: true}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$playView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$ul,
				{ctor: '[]'},
				A2(
					_elm_lang$core$List$map,
					function (player) {
						return A2(
							_elm_lang$html$Html$li,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(player.name),
								_1: {ctor: '[]'}
							});
					},
					model.players)),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$Position = F2(
	function (a, b) {
		return {row: a, col: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		players: {
			ctor: '::',
			_0: {name: 'Someone Else'},
			_1: {ctor: '[]'}
		},
		currentPlayerName: '',
		inGame: false,
		position: A2(_user$project$Main$Position, 0, 0)
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$Player = function (a) {
	return {name: a};
};
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {players: a, currentPlayerName: b, inGame: c, position: d};
	});
var _user$project$Main$NoOp = {ctor: 'NoOp'};
var _user$project$Main$Move = function (a) {
	return {ctor: 'Move', _0: a};
};
var _user$project$Main$boardCell = F3(
	function (model, rowNum, colNum) {
		var _p1 = _elm_lang$core$Native_Utils.eq(model.position.row, rowNum) && _elm_lang$core$Native_Utils.eq(model.position.col, colNum);
		if (_p1 === true) {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('cell'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('J'),
					_1: {ctor: '[]'}
				});
		} else {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('cell'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$Main$Move(
								A2(_user$project$Main$Position, rowNum, colNum))),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'});
		}
	});
var _user$project$Main$boardRowView = F2(
	function (model, rowNum) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('row'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				A2(_user$project$Main$boardCell, model, rowNum),
				A2(_elm_lang$core$List$range, 0, 5)));
	});
var _user$project$Main$boardView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('board'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$List$map,
			_user$project$Main$boardRowView(model),
			A2(_elm_lang$core$List$range, 0, 5)));
};
var _user$project$Main$view = function (model) {
	return _user$project$Main$boardView(model);
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
var _user$project$Main$Submit = {ctor: 'Submit'};
var _user$project$Main$Change = function (a) {
	return {ctor: 'Change', _0: a};
};
var _user$project$Main$enterView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('Player, enter name.'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Change),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Submit),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Enter'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
